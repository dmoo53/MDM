//set values
entry.setEntryAttrib("UCoA Programme Category/Parent", "Y") ;
entry.setEntryAttrib("UCoA Programme Category/Allow Budgeting", "N") ;
entry.setEntryAttrib("UCoA Programme Category/Allow Posting", "N") ;
entry.setEntryAttrib("UCoA Programme Category/Account Type", "Programme") ;
entry.setEntryAttrib("UCoA Programme Category/Third Party Control Account", "N") ;
entry.setEntryAttrib("UCoA Programme Category/Reconcile", "N") ;





//Validate attributes at 1-3 levels





validationRules =[];
//Level 0 dummy Regex
validationRules.add("nothing");
//Level one Regex
validationRules.add("\d\d\d\dTT");
//Level 2 Regex
validationRules.add("\d\d\d\d\D\D");
//Level 3 Regex
validationRules.add("\d\d\d\d(\d\D|DC)");


//error messages

errorMessage=[];
//Level 0 dummy message
errorMessage.add("nothing");
//Level one Regex
errorMessage.add("the pattern should be \d\d\d\dTT");
//Level 2 Regex
errorMessage.add("te pattern should be \d\d\d\d\D\D");
//Level 3 Regex
errorMessage.add("the pattern should be \d\d\d\d(\d\D|DC)");

categoryLevels =[];

categoryLevels = entry.getCategoryLevels();
itemLevel=categoryLevels[0];





//check Code validation for various levels


for(i=1; i<validationRules.size();i++)
{
	if (itemLevel==i)
	{

		var rexp = buildRE(validationRules[i],1);
		var Name = checkString(entry.getEntryAttrib("UCoA Programme Category/Code"),"");
		var rootnode = entry.getRootEntryNode();
		var node = rootnode.getEntryNode("UCoA Programme Category/Code");
		var NameAfterRe = rexp.substitute(Name,"");
		if(NameAfterRe!=""){
			// fail validation
			node.throwValidationError("PATTERN",errorMessage[i]);
		} else { 
			//OK
		}
	}
	else {
	//no validation 
	}
}

//check old codes for L2
//check old L1 Code
if (itemLevel==2)
{
var rexp =  buildRE("^\d\d\d\d(A|N|D)T$",1);	
var Name = checkString(entry.getEntryAttrib("UCoA Programme L 2/Old L 1 Code"),"");
var rootnode = entry.getRootEntryNode();
var node = rootnode.getEntryNode("UCoA Programme L 2/Old L 1 Code");
var NameAfterRe = rexp.substitute(Name,"OK");

if(NameAfterRe!="OK"){
	// fail validation
	node.throwValidationError("PATTERN","The L1 Old code should be four digits then either (A,N,D) and then T");
} else { 
	//OK
}


}


//check old L2 Code
if (itemLevel==2)
{
var rexp =  buildRE("(000000|000001|\d\d\d\d\D\D)",1);	
var Name = checkString(entry.getEntryAttrib("UCoA Programme L 2/Old L 2 Code"),"");
var rootnode = entry.getRootEntryNode();
var node = rootnode.getEntryNode("UCoA Programme L 2/Old L 2 Code");
var NameAfterRe = rexp.substitute(Name,"OK");

if(NameAfterRe!="OK"){
	// fail validation
	node.throwValidationError("PATTERN","The L2 Old code should be either 000000 or 000001 or four digits two leters");
} else { 
	//OK
}


}




//no old code validation if level is not 2
else{

}

