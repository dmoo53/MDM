//set values
entry.setEntryAttrib("NEW UCoA Programme Primary Spec/Parent", "No") ;
entry.setEntryAttrib("NEW UCoA Programme Primary Spec/Allow Budgeting", "Yes") ;
entry.setEntryAttrib("NEW UCoA Programme Primary Spec/Allow Posting", "Yes") ;
entry.setEntryAttrib("NEW UCoA Programme Primary Spec/Account Type", "Programme") ;
entry.setEntryAttrib("NEW UCoA Programme Primary Spec/Third Party Control Account", "No") ;
entry.setEntryAttrib("NEW UCoA Programme Primary Spec/Reconcile", "No") ;


//Check whether name is not empty
var checkName = checkString(entry.getEntryAttrib("NEW UCoA Programme Primary Spec/Name"),"");
var rootnode = entry.getRootEntryNode();
var node = rootnode.getEntryNode("NEW UCoA Programme Primary Spec/Name");
if (checkName=="") {
	// fail validation
	node.throwValidationError("VALIDATION_RULE","Name cannot be empty");
} else { 
	//OK
}

//Check whether Enable is not empty
var checkName2 = checkString(entry.getEntryAttrib("NEW UCoA Programme Primary Spec/Enable"),"");
var rootnode2 = entry.getRootEntryNode();
var node2 = rootnode2.getEntryNode("NEW UCoA Programme Primary Spec/Enable");
if (checkName2=="") {
	// fail validation
	node2.throwValidationError("VALIDATION_RULE","Enable cannot be empty");
} else { 
	//OK
}

//Check whether Sub Segment is not empty
var checkName1 = checkString(entry.getEntryAttrib("UCoA Programme Level 4/DFF Sub Segment"),"");
var rootnode1 = entry.getRootEntryNode();
var node1 = rootnode1.getEntryNode("UCoA Programme Level 4/DFF Sub Segment");
if (checkName1=="") {
	// fail validation
	node1.throwValidationError("VALIDATION_RULE","Name cannot be empty");
} else { 
	//OK
}




//Verify regular expression for key


var rexp = buildRE("\d\d\d\d\d\d",1);
var Name = checkString(entry.getEntryAttrib("NEW UCoA Programme Primary Spec/Key"),"");
var rootnode = entry.getRootEntryNode();
var node = rootnode.getEntryNode("NEW UCoA Programme Primary Spec/Key");
var NameAfterRe = rexp.substitute(Name,"");
if(NameAfterRe!=""){
	// fail validation
	node.throwValidationError("PATTERN","The supplied value does not match the required pattern");
} else { 
	//OK
}


//check whehter 
var e;

catchError(e) {
	var scriptLogger = getLogger("scriptDebug");
	scriptLogger.loggerDebug("Validation - Start");
	// validations
	// get category for entry
	var category;
	var categoryAttributeValue;
	var aCategories = entry.getCtgItemCategories();
	if(aCategories != null && aCategories.size() > 0){
		// gives you the item category and access to the category attribute
		category = aCategories[0];
		categoryAttributeValue = category.getEntryAttrib("UCoA Programme Level 3/DFF Estimate Row");
	}
	// get related item using attribute L3
	var relatedItem = entry.getItemUsingEntryRelationshipAttrib("UCoA Programme Level 4/DFF Sub Segment");
	if (relatedItem != null) {
		//
		var sError = "The Selected sub segment is incorrect given L3 Estimate Row";
		// get related item attribute
		var relatedItemAttribValue = relatedItem.getEntryAttrib("UCoA DFF Sub Segment/Parent (DFF Estimate Row)");
		if (relatedItemAttribValue != categoryAttributeValue ) {
			var rootEntryNode = entry.getRootEntryNode();
			var entryNode = rootEntryNode.getEntryNode("UCoA Programme Level 4/DFF Sub Segment");
			entryNode.throwValidationError("VALIDATION_RULE",sError);
		}
	}
	// end validations
}
if (e != null) {
	throwError(e);
}
